require 'spec_helper'

describe Support do

  describe "configuration file" do

    it "should return a hash" do
      Support.config.is_a?(Hash).should be_true
    end

    it "should return valid attribute" do
      Support.config("success_redirect_path").should_not be_blank
    end

    it "should not raise exception if invalid attribute passed" do
      Support.config("wagabolama").should be_nil
    end

  end

  describe "configuration" do
    it "should return corrent value when setting user_method to current_user" do
      Support.config("user_method").should == "current_user"
    end
  end

  describe "opening a ticket" do

    it "should open a ticket given valid attrubutes" do
      @ticket = Support.new(Factory.attributes_for(:ticket))
      @ticket.should be_valid
    end

    it "should send email to the user one ticket is opened" do
      lambda {
        Factory.create(:ticket)
      }.should change(ActionMailer::Base.deliveries, :size).by(1)
    end

    describe "valid tickets" do

      it "should accept valid attributes" do
        @ticket = Support.new(email: "bla@blala.com", name: "Jonny Doe", support: "I am a valid support ticket")
        @ticket.should be_valid
      end

    end

    describe "invalid tickets" do

      it "should fail to create ticket with no email" do
        @ticket = Support.new(name: "Jonny Doe", support: "I am a valid support ticket")
        @ticket.should_not be_valid
      end

      it "should fail to create ticket with invalid email" do
        @ticket = Support.new(name: "Jonny Doe", support: "I am a valid support ticket", email: "I am not a valid email")
        @ticket.should_not be_valid
      end

      it "should fail to create ticket with no name" do
        @ticket = Support.new(email: "email@email.com", support: "I am a valid support ticket")
        @ticket.should_not be_valid
      end

      it "should fail to create ticket with no body" do
        @ticket = Support.new(name: "Jonny Doe", email: "email@email.com")
        @ticket.should_not be_valid
      end

      it "should fail to create ticket with a short body" do
        @ticket = Support.new(name: "Jonny Doe", email: "email@email.com", support: "short")
        @ticket.should_not be_valid
      end

    end

    describe "meta fields" do
      it "should have meta fields as hash" do
        ticket = Factory.build(:ticket)
        ticket.meta_fields.class.should == Hash
      end

      it "should have configurations for the meta fields" do
        Support.config("meta_fields").should_not be_blank
        Support.config("meta_fields").class.should == Hash
      end 
    end

    # it "should disregard a spammy ticket" do
    #   # spam? is a method generated by the akismet plugin
    #   # this test assumes it works well.
    #   @ticket = Support.new(Factory.attributes_for(:ticket))
    #   @ticket.stub!(:spam?).and_return(true)
    #   @ticket.should_not be_valid
    # end

  end

end
